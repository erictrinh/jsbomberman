// Generated by CoffeeScript 1.3.1
var can_go, is_odd, move_down, move_left, move_right, move_up, movement_logic;

can_go = function(player) {
  var coords, d, l, r, u;
  coords = get_grid_coords(player);
  u = true;
  d = true;
  l = true;
  r = true;
  if (coords.col === 0 && player.position.x !== 25) {
    l = true;
  } else if (player.position.x === 25 || coords.col === 0 || !objects[coords.row][coords.col - 1].walkable) {
    if (coords.col > 0 && !objects[coords.row][coords.col - 1].walkable && player.position.x - get_cartesian(coords.row, coords.col).x > 0) {
      l = true;
    } else {
      l = false;
    }
  }
  if (coords.col === 8 && player.position.x !== 425) {
    r = true;
  } else if (player.position.x === 425 || coords.col === 8 || !objects[coords.row][coords.col + 1].walkable) {
    if (coords.col < 8 && !objects[coords.row][coords.col + 1].walkable && get_cartesian(coords.row, coords.col).x - player.position.x > 0) {
      r = true;
    } else {
      r = false;
    }
  }
  if (coords.row === 0 && player.position.y !== 25) {
    u = true;
  } else if (player.position.y === 25 || coords.row === 0 || !objects[coords.row - 1][coords.col].walkable) {
    if (coords.row > 0 && !objects[coords.row - 1][coords.col].walkable && player.position.y - get_cartesian(coords.row, coords.col).y > 0) {
      u = true;
    } else {
      u = false;
    }
  }
  if (coords.row === 8 && player.position.y !== 425) {
    d = true;
  } else if (player.position.y === 425 || coords.row === 8 || !objects[coords.row + 1][coords.col].walkable) {
    if (coords.row < 8 && !objects[coords.row + 1][coords.col].walkable && get_cartesian(coords.row, coords.col).y - player.position.y > 0) {
      d = true;
    } else {
      d = false;
    }
  }
  return {
    up: u,
    down: d,
    left: l,
    right: r
  };
};

is_odd = function(num) {
  return num % 2 === 1;
};

move_up = function(player, unit) {
  player.facing = 'up';
  player.position.y -= unit;
  if (!is_odd(player.position.y) && unit === 2) {
    return player.position.y -= 1;
  }
};

move_down = function(player, unit) {
  player.facing = 'down';
  player.position.y += unit;
  if (!is_odd(player.position.y) && unit === 2) {
    return player.position.y += 1;
  }
};

move_left = function(player, unit) {
  player.facing = 'left';
  player.position.x -= unit;
  if (!is_odd(player.position.x) && unit === 2) {
    return player.position.x -= 1;
  }
};

move_right = function(player, unit) {
  player.facing = 'right';
  player.position.x += unit;
  if (!is_odd(player.position.x) && unit === 2) {
    return player.position.x += 1;
  }
};

movement_logic = function(player) {
  var rate, unit;
  unit = null;
  rate = null;
  switch (player.speed) {
    case 1:
      unit = 1;
      rate = 10;
      break;
    case 2:
      unit = 1;
      rate = 7;
      break;
    case 3:
      unit = 2;
      rate = 10;
      break;
    case 4:
      unit = 2;
      rate = 8;
      break;
    case 5:
      unit = 2;
      rate = 6;
      break;
    case 6:
      unit = 2;
      rate = 5;
      break;
    case 7:
      unit = 1;
      rate = 2;
      break;
    case 8:
      unit = 2;
      rate = 3;
      break;
    case 9:
      unit = 2;
      rate = 2;
      break;
    case 10:
      unit = 2;
      rate = 1;
  }
  if (player.up) {
    if (on_snap_x(player) !== player.position.x) {
      if (can_go(player).up) {
        if (on_snap_x(player) > player.position.x) {
          move_right(player, unit);
        } else {
          move_left(player, unit);
        }
      } else {
        if (on_snap_x(player) > player.position.x) {
          move_left(player, unit);
        } else {
          move_right(player, unit);
        }
      }
    } else {
      if (can_go(player).up) {
        move_up(player, unit);
      } else {
        player.facing = 'up';
      }
    }
  } else if (player.down) {
    if (on_snap_x(player) !== player.position.x) {
      if (can_go(player).down) {
        if (on_snap_x(player) > player.position.x) {
          move_right(player, unit);
        } else {
          move_left(player, unit);
        }
      } else {
        if (on_snap_x(player) > player.position.x) {
          move_left(player, unit);
        } else {
          move_right(player, unit);
        }
      }
    } else {
      if (can_go(player).down) {
        move_down(player, unit);
      } else {
        player.facing = 'down';
      }
    }
  } else if (player.left) {
    if (on_snap_y(player) !== player.position.y) {
      if (can_go(player).left) {
        if (on_snap_y(player) > player.position.y) {
          move_down(player, unit);
        } else {
          move_up(player, unit);
        }
      } else {
        if (on_snap_y(player) > player.position.y) {
          move_up(player, unit);
        } else {
          move_down(player, unit);
        }
      }
    } else {
      if (can_go(player).left) {
        move_left(player, unit);
      } else {
        player.facing = 'left';
      }
    }
  } else if (player.right) {
    if (on_snap_y(player) !== player.position.y) {
      if (can_go(player).right) {
        if (on_snap_y(player) > player.position.y) {
          move_down(player, unit);
        } else {
          move_up(player, unit);
        }
      } else {
        if (on_snap_y(player) > player.position.y) {
          move_up(player, unit);
        } else {
          move_down(player, unit);
        }
      }
    } else {
      if (can_go(player).right) {
        move_right(player, unit);
      } else {
        player.facing = 'right';
      }
    }
  }
  return player.movement = setTimeout("movement_logic(players[" + player.id + "])", rate);
};
