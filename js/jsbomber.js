// Generated by CoffeeScript 1.3.1
var bombs, check_collisions, drop_bomb, explode_bomb, explosion, explosions, extinguish_explosion, game_logic, player1, player2, player_collision, timer, update_map;

player1 = {
  position: {
    x: 25,
    y: 25
  },
  speed: 5,
  up: false,
  down: false,
  right: false,
  left: false
};

player2 = {
  position: {
    x: 475,
    y: 475
  },
  speed: 5,
  up: false,
  down: false,
  right: false,
  left: false
};

bombs = new Array();

explosions = new Array();

timer = null;

game_logic = function() {
  if (player1.up) {
    player1.position.y -= player1.speed;
  } else if (player1.down) {
    player1.position.y += player1.speed;
  } else if (player1.left) {
    player1.position.x -= player1.speed;
  } else if (player1.right) {
    player1.position.x += player1.speed;
  }
  if (player2.up) {
    player2.position.y -= player2.speed;
  } else if (player2.down) {
    player2.position.y += player2.speed;
  } else if (player2.left) {
    player2.position.x -= player2.speed;
  } else if (player2.right) {
    player2.position.x += player2.speed;
  }
  update_map();
  if (check_collisions()) {
    return clearTimeout(timer);
  } else {
    return timer = setTimeout("game_logic()", 25);
  }
};

update_map = function() {
  var elem, _i, _j, _len, _len1;
  $('#map').clearCanvas();
  for (_i = 0, _len = bombs.length; _i < _len; _i++) {
    elem = bombs[_i];
    $('#map').drawRect({
      fillStyle: '#0c9df9',
      x: elem.x,
      y: elem.y,
      width: 40,
      height: 40,
      fromCenter: true
    });
  }
  for (_j = 0, _len1 = explosions.length; _j < _len1; _j++) {
    elem = explosions[_j];
    $('#map').drawLine({
      strokeStyle: "#f90c22",
      strokeWidth: 2,
      x1: elem.x,
      y1: 0,
      x2: elem.x,
      y2: 500
    }).drawLine({
      strokeStyle: "#f90c22",
      strokeWidth: 2,
      x1: 0,
      y1: elem.y,
      x2: 500,
      y2: elem.y
    });
  }
  return $('#map').drawRect({
    fillStyle: '#3d454b',
    x: player1.position.x,
    y: player1.position.y,
    width: 25,
    height: 25,
    fromCenter: true,
    strokeStyle: '#000',
    strokeWidth: 1
  }).drawRect({
    fillStyle: '#fff',
    x: player2.position.x,
    y: player2.position.y,
    width: 25,
    height: 25,
    fromCenter: true,
    strokeStyle: '#000',
    strokeWidth: 1
  });
};

drop_bomb = function(x_pos, y_pos) {
  bombs.push({
    x: x_pos,
    y: y_pos
  });
  return setTimeout("explode_bomb()", 2000);
};

explode_bomb = function() {
  explosion(bombs[0].x, bombs[0].y);
  return bombs.splice(0, 1);
};

explosion = function(x_pos, y_pos) {
  explosions.push({
    x: x_pos,
    y: y_pos
  });
  return setTimeout("extinguish_explosion()", 1000);
};

extinguish_explosion = function() {
  return explosions.splice(0, 1);
};

check_collisions = function() {
  var elem, _i, _len;
  for (_i = 0, _len = explosions.length; _i < _len; _i++) {
    elem = explosions[_i];
    if (player_collision(player1, elem) && player_collision(player2, elem)) {
      console.log('both players dead');
      return true;
    } else if (player_collision(player1, elem)) {
      console.log('player 1 dead');
      return true;
    } else if (player_collision(player2, elem)) {
      console.log('player 2 dead');
      return true;
    } else {
      return false;
    }
  }
};

player_collision = function(player, explosion) {
  var _ref, _ref1;
  if ((player.position.x - 25 / 2 < (_ref = explosion.x) && _ref < player.position.x + 25 / 2) || (player.position.y - 25 / 2 < (_ref1 = explosion.y) && _ref1 < player.position.y + 25 / 2)) {
    return true;
  } else {
    return false;
  }
};

$(function() {
  return game_logic();
});

$(document).bind('keydown', function(e) {
  if (!event.metaKey) {
    if (e.which === 87) {
      player1.up = true;
    } else if (e.which === 83) {
      player1.down = true;
    } else if (e.which === 65) {
      player1.left = true;
    } else if (e.which === 68) {
      player1.right = true;
    } else if (e.which === 88) {
      drop_bomb(player1.position.x, player1.position.y);
    }
    if (e.which === 80) {
      player2.up = true;
    } else if (e.which === 186) {
      player2.down = true;
    } else if (e.which === 76) {
      player2.left = true;
    } else if (e.which === 222) {
      player2.right = true;
    } else if (e.which === 191) {
      drop_bomb(player2.position.x, player2.position.y);
    }
    return false;
  }
}).bind('keyup', function(e) {
  if (!event.metaKey) {
    if (e.which === 87) {
      player1.up = false;
    } else if (e.which === 83) {
      player1.down = false;
    } else if (e.which === 65) {
      player1.left = false;
    } else if (e.which === 68) {
      player1.right = false;
    }
    if (e.which === 80) {
      player2.up = false;
    } else if (e.which === 186) {
      player2.down = false;
    } else if (e.which === 76) {
      player2.left = false;
    } else if (e.which === 222) {
      player2.right = false;
    }
    return false;
  }
});
